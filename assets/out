#!/bin/bash


##TODO REMOVE
cd ~/gh/concourse-sfdx-resource
##

set -e
set -o pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

# Read inputs
source=$1
payload=$(mktemp /tmp/resource-in.XXXXXX)

cat > $payload <&0

# cd $source

CUMULUSCI_KEY=$(jq -r '.params.cumulus_ci_key' < $payload)
HUB_USERNAME=$(jq -r '.params.hub_username' < $payload)
PACKAGE_KEY=$(jq -r '.params.package_key' < $payload)
PACKAGE_NAME=$(jq -r '.params.package_name' < $payload)
PACKAGE_DIRECTORY=$(jq -r '.params.package_directory' < $payload)
jq -r '.params.jwtkey' < $payload > server.key

cp $(jq -r '.params.org_dir')/* /root/.cumulusci

# Command

# sfdx force:auth:jwt:grant --clientid ${CONSUMER_KEY} --username ${HUB_USERNAME} --jwtkeyfile server.key --setdefaultdevhubusername

mkdir -p ./tmp
# cp -r ~/gh/salesforce-filtered-related-lists/* ./tmp
cd tmp

sfdx force:config:set defaultusername=${HUB_USERNAME}

CONSUMER_KEY=$(jq -r '.params.consumer_key' < $payload)
sfdx force:package:version:create -p "${PACKAGE_NAME}" -d ${PACKAGE_DIRECTORY} -k ${PACKAGE_KEY}

# Results

release=1
result="$(jq -n "{version:{release:\"$release\", deleted: \"true\"}, metadata: [{name: \"release\", value: \"$release\"}]}")"
echo "$result" | jq -s add >&3