#!/bin/bash

# Below is some standard resource type scaffolding. 'source' and 'payload' will be json objects which can be read with jq.

set -e
set -o pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

# Read inputs

cd $1
payload=$(mktemp /tmp/resource-in.XXXXXX)

cat > $payload <&0

# Get options

export CUMULUSCI_KEY=$(jq -r '.source.cumulusci_key' < $payload)
ORG_DIR=$(jq -r '.params.org_dir' < $payload)
PROJECT_NAME=$(jq -r '.params.project_name' < $payload)
PROJECT_DIR=$(jq -r '.params.project_dir' < $payload)
COMMAND=$(jq -r '.params.command' < $payload)
ARGS=$(jq -r '.params.args' < $payload)

# Copy directories

mkdir -p /root/.cumulusci/$PROJECT_NAME
cp -R $ORG_DIR/* /root/.cumulusci/$PROJECT_NAME
cp -R $PROJECT_DIR /tmp/project

# Command

cd /tmp/project
cci $COMMAND $ARGS

# Results

jq -n "{
  version: {},
  metadata: [{}]
}" >&3
